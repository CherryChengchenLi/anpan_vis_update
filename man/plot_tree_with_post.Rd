% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization.R
\name{plot_tree_with_post}
\alias{plot_tree_with_post}
\title{Plot a tree and the PGLMM posterior on phylogenetic effects}
\usage{
plot_tree_with_post(
  tree_file,
  meta_file,
  fit,
  labels,
  covariates = c("age", "gender"),
  outcome = "crc",
  omit_na = FALSE,
  ladderize = TRUE,
  color_bars = FALSE,
  verbose = TRUE,
  trim_pattern = NULL,
  return_tree_df = FALSE
)
}
\arguments{
\item{tree_file}{either a path to a tree file readable by ape::read.tree() or an object of class
"phylo" that is already read into R.}

\item{meta_file}{either a data frame of metadata or a path to file containing the metadata}

\item{fit}{a pglmm fit from \code{anpan_pglmm()}}

\item{labels}{the ordered tip labels from the tree}

\item{covariates}{covariates to account for (as a vector of strings)}

\item{outcome}{the name of the outcome variable}

\item{omit_na}{logical indicating whether to omit incomplete cases of the metadata}

\item{ladderize}{logical indicating whether to run \code{\link[ape:ladderize]{ape::ladderize()}} on the tree before running
the model}

\item{color_bars}{if true, show color bars below the plot showing the covariates and outcome
variables.}

\item{trim_pattern}{optional pattern to trim from tip labels of the tree}

\item{return_tree_df}{if true, return a list containing 1) the plot, 2) the segment data frame,
and 3) the labelled terminal segment data frame. Otherwise, just return the plot.}
}
\value{
either the plot or (if return_tree_df = TRUE) a list containing the plot, the segment df,
  the terminal segment df, and the yrep df.
}
\description{
Plot a tree and the PGLMM posterior on phylogenetic effects
}
\details{
The whiskers of each box plot are the 90\% posterior intervals, the box is the 50\%
  interval, and the middle line is the posterior mean.

  The \code{labels} needs to contain the leaf labels \emph{in the order produced by the
  Cholesky factorization of the correlation matrix} (which is how the data are passed to the
  sampler). This is not necessarily the order of the leaves on the x-axis of the tree, nor the
  order of the samples in the metadata. The simplest way to get the sample_ids in the proper
  order is to take the \code{sample_id} column from the model_input result from anpan_pglmm().
}
\examples{
\dontrun{
# Using the result simulated in the vignette:
plot_tree_with_post(tr, metadata,
                    fit        = result$pglmm_fit,
                    labels     = result$model_input$sample_id,
                    outcome    = 'outcome',
                    covariate  = 'covariate',
                    color_bars = TRUE)
}
}
