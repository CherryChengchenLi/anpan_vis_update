% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pglmm.R
\name{anpan_pglmm_batch}
\alias{anpan_pglmm_batch}
\title{Run PGLMMs on a batch of tree files}
\usage{
anpan_pglmm_batch(
  meta_file,
  tree_dir,
  outcome,
  covariates = NULL,
  out_dir = NULL,
  trim_pattern = NULL,
  omit_na = FALSE,
  family = "gaussian",
  show_plot_cor_mat = TRUE,
  show_plot_tree = TRUE,
  save_object = FALSE,
  verbose = TRUE,
  loo_comparison = TRUE,
  run_diagnostics = FALSE,
  reg_noise = TRUE,
  plot_ext = "pdf",
  show_yrep = FALSE,
  show_post = TRUE,
  reg_gamma_params = c(1, 2),
  beta_sd = NULL,
  sigma_phylo_scale = 0.333,
  seed = 123,
  ...
)
}
\arguments{
\item{meta_file}{either a data frame of metadata or a path to file containing the metadata}

\item{tree_dir}{string giving the path to a directory of tree files}

\item{outcome}{the name of the outcome variable}

\item{covariates}{covariates to account for (as a vector of strings)}

\item{out_dir}{if saving, directory where to save}

\item{trim_pattern}{optional pattern to trim from tip labels of the tree}

\item{omit_na}{logical indicating whether to omit incomplete cases of the metadata}

\item{family}{string giving the name of the distribution of the outcome variable (usually
"gaussian" or "binomial")}

\item{show_plot_cor_mat}{show a plot of the correlation matrix derived from the tree}

\item{show_plot_tree}{show a plot of the tree overlaid with the outcome.}

\item{save_object}{logical indicating whether to save the model fit object}

\item{loo_comparison}{logical indicating whether to compare the phylogenetic model against a base
model (without the phylogenetic term) using \code{\link[loo:loo_compare]{loo::loo_compare()}}}

\item{run_diagnostics}{logical indicating whether to run \code{\link[cmdstanr:fit-method-cmdstan_summary]{cmdstanr::cmdstan_diagnose()}} and
\code{\link[loo:pareto-k-diagnostic]{loo::pareto_k_table()}} to check the MCMC and loo diagnostics respectively.}

\item{reg_noise}{logical indicating whether to regularize the ratio of sigma_phylo to sigma_resid
with a Gamma prior}

\item{plot_ext}{extension to use when saving plots}

\item{show_yrep}{show a plot of the tree overlaid with the outcome and the posterior predictive
distribution for each observation if plotting the tree}

\item{show_post}{show a plot of the tree overlaid with the outcome and posterior distribution on
phylogenetic effects.}

\item{reg_gamma_params}{the shape and rate parameters of the Gamma prior on the noise term ratio.
Default: c(1,2)}

\item{beta_sd}{prior standard deviation parameters on the normal distribution for each covariate
in the GLM component}

\item{sigma_phylo_scale}{standard deviation of half-normal prior on \code{sigma_phylo} for
logistic PGLMMs when \code{family = 'binomial'}. Increasing this value can easily lead to
overfitting.}

\item{seed}{random seed to pass to furrr_options()}

\item{...}{other arguments to pass to \code{\link[cmdstanr:model-method-sample]{cmdstanr::sample()}}}
}
\value{
a data frame for each file in input directory that fit successfully.
  Columns give the PGLMM results, "base" model results, and loo comparisons
  in list columns.
}
\description{
This function fits phylogenetic generalized linear mixed models
  on a batch of tree files, using the same outcome and covariate arguments.
}
\details{
\code{tree_dir} must contain ONLY tree files readable by
  ape::read.tree()

  If any trees cause an error while fitting, these are saved into a data
  frame in a file \code{pglmm_errors.RData} in the output directory.

  The Stan model fitting can't be parallelized via futures, so the most
  effective way to parallelize the model fitting AND the importance weight
  calculations is a nested future topology (e.g. \code{plan(list(sequential,
  tweak(multisession, workers = 4)))} ) and set parallel_chains = 4 . This
  will run sequentially over the trees, running the model fits with parallel
  chains for each tree, then compute the importance weights in the future
  multisession for each tree.
}
\seealso{
\code{\link[ape:read.tree]{ape::read.tree}}, \code{\link[ape:write.tree]{ape::write.tree}}, \code{\link[=anpan_pglmm]{anpan_pglmm()}}
}
